<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.team.neorangnarang.user.mapper.UserMapper">
    <select id="selectTime" resultType="String">
        SELECT now()
    </select>

    <!-- 회원가입 -->
    <insert id="saveUser" parameterType="User">
        INSERT INTO tb_user(uid, password, email, gender, nickname, phone, role, provider, provider_id)
        VALUES (#{uid}, #{password}, #{email}, #{gender}, #{nickname}, #{phone}, #{role}, #{provider}, #{provider_id})
    </insert>

    <!-- 회원 정보 수정 -->
    <update id="updateUser" parameterType="User">
        UPDATE tb_user
        SET nickname = #{nickname}, profile_img = #{profile_img}
        WHERE user_idx = #{user_idx}
    </update>

    <!-- 회원 아이디로 검색 -->
    <select id="findByUserId" resultType="User">
        SELECT * FROM tb_user WHERE uid = #{uid}
    </select>

    <!-- 회원 pk로 검색 -->
    <select id="findByUserIdx" resultType="User">
        SELECT * FROM tb_user WHERE user_idx = #{user_idx}
    </select>

    <!-- 소셜 로그인 제공처 별 검색 -->
    <select id="findByProvider" resultType="User">
        SELECT * FROM tb_user WHERE provider = #{provider}
    </select>

    <!-- 소셜 로그인 제공처의 pk 값으로 검색 -->
    <select id="findByProviderId" resultType="User">
        SELECT * FROM tb_user WHERE provider_id = #{provider_id}
    </select>

    <!-- 리뷰 등록 -->
    <insert id="registerReview" parameterType="Review">
        INSERT INTO tb_review(writer_idx, target_idx, content, rating, writer_display)
        VALUES (#{writer_idx}, #{target_idx}, #{content}, #{rating}, #{writer_display})
    </insert>

    <select id="getReviewByWriterIdx" resultType="Review">
        SELECT a.*, b.nickname AS target_nickname
        FROM tb_review AS a LEFT JOIN tb_user AS b
        ON a.target_idx = b.user_idx
        WHERE a.writer_idx = #{writer_idx}
        ORDER BY a.review_idx DESC;
    </select>

    <select id="getReviewByTargetIdx" resultType="Review">
        SELECT a.*, b.nickname AS writer_nickname
        FROM tb_review AS a LEFT JOIN tb_user AS b
        ON a.writer_idx = b.user_idx
        WHERE a.target_idx = #{target_idx}
        ORDER BY a.review_idx DESC;
    </select>

    <select id="getRatingAvgByTargetIdx" resultType="float">
        SELECT avg(rating) FROM tb_review WHERE target_idx = #{target_idx}
    </select>
</mapper>